<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Waiting for Singularity]]></title>
  <link href="http://anaerobeth.github.io/atom.xml" rel="self"/>
  <link href="http://anaerobeth.github.io/"/>
  <updated>2013-09-05T20:03:49-04:00</updated>
  <id>http://anaerobeth.github.io/</id>
  <author>
    <name><![CDATA[Beth Tenorio]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Chess Quote Bot]]></title>
    <link href="http://anaerobeth.github.io/blog/2013/09/05/chess-quote-bot/"/>
    <updated>2013-09-05T15:58:00-04:00</updated>
    <id>http://anaerobeth.github.io/blog/2013/09/05/chess-quote-bot</id>
    <content type="html"><![CDATA[<p>Chess Quote Bot</p>

<p>A <a href="https://github.com/anaerobeth/BSS_SMS_QuoteBot/blob/master/app.py">quote bot app</a> developed using Python, Flask and Twilio API.</p>

<h2>Quotes from Chess Grandmasters</h2>

<h3>Text 1-617-9936601 for an inspirational chess quote</h3>

<pre><code>The beauty of a move lies not in its appearance but in the thought behind it.
-  Aaron Nimzowitsch
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ROT13 encryption in Python and Ruby]]></title>
    <link href="http://anaerobeth.github.io/blog/2013/09/04/rot13-encryption-in-python-and-ruby/"/>
    <updated>2013-09-04T15:58:00-04:00</updated>
    <id>http://anaerobeth.github.io/blog/2013/09/04/rot13-encryption-in-python-and-ruby</id>
    <content type="html"><![CDATA[<p>A program to encrypt a message in ROT13 by shifting a letter through the alphabet (an exercise from Chapter 8 of Think Python by Allen Downey)</p>

<p>ASCII numbers
* ord(&lsquo;a&rsquo;) => 97
* ord(&lsquo;z&rsquo;) => 122
* ord(&lsquo;A&rsquo;) = > 65
* ord(&lsquo;Z&rsquo;) = > 90
* chr(97) => &lsquo;a&rsquo;</p>

<p>Key is the number of places the letters of the message should be moved during encryption</p>

<h3>Solution in Python</h3>

<pre><code>def rotate_word(message, key):
    new_message = ''
    s = message.lower()
    for letter in s:
        new_ord = key + ord(letter)
        if new_ord &gt; 122:
            new_ord = new_ord - 26
            new_letter = chr(new_ord)
        else:
            new_letter = chr(new_ord)

        new_message = new_message + new_letter
    return new_message.lower()

words = ['abc', 'python', 'ruby', 'unladen swallow']

print "*** Messages encrypted in ROT13 ***"
for word in words:
    print "%s: %s" % (word, rotate_word(word, 13))
</code></pre>

<h3>Solution in Ruby</h3>

<pre><code>def rotate_word(message, key)
  new_message = ''
  message.downcase!
  message_array = message.split('')
  message_array.each do |m|
    new_ord = key + m[0].ord
    if new_ord &gt; 122
      new_ord = new_ord - 26
      new_letter = new_ord.chr
    else
      new_letter = new_ord.chr
    end
    new_message = new_message + new_letter
  end
  return new_message.downcase
end

words = ['abc', 'python', 'ruby', 'unladen swallow']

puts "*** Messages encrypted in ROT13 ***"
words.each do |word|
    puts "#{word}: #{rotate_word(word, 13)}"
end
</code></pre>

<p>Outputs:</p>

<pre><code>*** Messages encrypted in ROT13 ***
abc: nop
python: clguba
ruby: ehol
unladen swallow: haynqra-fjnyybj
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Text 2 Pro Tip: Multiple Cursors ]]></title>
    <link href="http://anaerobeth.github.io/blog/2013/09/03/sublime-text-pro-tips/"/>
    <updated>2013-09-03T11:58:00-04:00</updated>
    <id>http://anaerobeth.github.io/blog/2013/09/03/sublime-text-pro-tips</id>
    <content type="html"><![CDATA[<p>Learn about Multiple Cursors and other pro tips from the article <a href="http://www.webdesignermag.co.uk/inspiration/10-must-know-sublime-text-2-tips/">10 Must-know Sublime Text 2 tips</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Palindrome checker in Python and Ruby]]></title>
    <link href="http://anaerobeth.github.io/blog/2013/09/02/palindrome-checker-in-python-and-ruby/"/>
    <updated>2013-09-02T09:18:00-04:00</updated>
    <id>http://anaerobeth.github.io/blog/2013/09/02/palindrome-checker-in-python-and-ruby</id>
    <content type="html"><![CDATA[<p>Write a function that takes a string argument and returns
True if it is a palindrome and False otherwise (an exercise from Chapter 6 of Think Python by Allen Downey).</p>

<h3>Solution in Python</h3>

<pre><code>def first(word):
    return word[0]

def last(word):
    return word[-1]

def middle(word):
    return word[1:-1]

def is_palindrome(word):
    if len(word) &lt;=1:
        return True
    if first(word) != last(word):
        return False
    return is_palindrome(middle(word))

words = ['cat', 'noon', 'radar', 'swallows', 'racecar']

for word in words:
  print '%s: %s' % (word, is_palindrome(word))
</code></pre>

<h3>Solution in Ruby</h3>

<pre><code>def first_letter(word)
  word[0]
end

def last_letter(word)
  word[-1]
end

def middle(word)
  word.byteslice(1..-2)
end

def is_palindrome?(word)
  if word.length &lt;= 1
    return 'True'
  elsif first_letter(word) != last_letter(word)
    return 'False'
  else
    return is_palindrome?(middle(word))
  end
end

puts "Palindrome Detector"

array = %w[cat noon radar swallows racecar]
array.each do |word|
  puts "#{word}: #{is_palindrome?(word)}"
end
</code></pre>

<p>Outputs:</p>

<pre><code>Palindrome Detector
cat: False
noon: True
radar: True
swallows: False
racecar: True
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Big Data is watching you]]></title>
    <link href="http://anaerobeth.github.io/blog/2013/08/29/big-data-is-watching-you/"/>
    <updated>2013-08-29T15:52:00-04:00</updated>
    <id>http://anaerobeth.github.io/blog/2013/08/29/big-data-is-watching-you</id>
    <content type="html"><![CDATA[<p>BBC UK weighs in on how <a href="http://www.bbc.co.uk/news/technology-23253949">building a digital copy of our physical world</a> can have profound consequences on how we live:</p>

<blockquote><h2>Tomorrow&rsquo;s cities: How big data is changing the world</h2>

<p>Nick Pickles, director of privacy campaign group Big Brother Watch, agrees that big data could become just another word for Big Brother. &ldquo;The core functionality of a smart city requires a vast amount data to be collected on every aspect of our lives every minute of every day. The question is how does that data get used? And it doesn&rsquo;t require a huge amount of imagination to see how it could be used to monitor people in a very real Big Brother way.&rdquo;</p>

<p>&ldquo;At present the control of information is being taken away from citizens, and companies providing services are rushing to find ways of generating revenue from the data they hold. The danger is that when smart cities become a reality, individuals will not be able to control the ways they are monitored or what happens to the information, which is exactly the opposite of how it should be.&rdquo;</p>

<p>The issue has huge implications for society and is going to need serious debate, Dr Ratti believes.</p></blockquote>
]]></content>
  </entry>
  
</feed>
